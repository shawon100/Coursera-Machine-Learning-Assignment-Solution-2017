function [J, grad] = linearRegCostFunction(X, y, theta, lambda)
%LINEARREGCOSTFUNCTION Compute cost and gradient for regularized linear 
%regression with multiple variables
%   [J, grad] = LINEARREGCOSTFUNCTION(X, y, theta, lambda) computes the 
%   cost of using theta as the parameter for linear regression to fit the 
%   data points in X and y. Returns the cost in J and the gradient in grad

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost and gradient of regularized linear 
%               regression for a particular choice of theta.
%
%               You should set J to the cost and grad to the gradient.
%



sigma=sum(power((X*theta-y),2));  %1st matrix column==2nd matrix row, so X*theta
reg=(lambda/(2*m))*sum(power(theta(2:length(theta)),2));

J=(1/(2*m))*(sigma)+reg;


g=(1/m)*sum(X.*(X*theta - y));  

g(1)=0;

grad(:,2:length(theta))


%(lambda/m)*(theta(2:length(theta))) also works like theta.*(lambda/m) but
%here we will ommit no 1 index as 1 is for bias term so (theta(2:length(theta)))









% =========================================================================

grad = grad(:);

end
